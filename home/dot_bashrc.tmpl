## If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

## Exit if not running bash
[ -z "$BASH_VERSION" ] && return

{{ if eq .chezmoi.os "linux" -}}
## Append user's bin dir to PATH
if [[ ":$PATH:" != "*/usr/local/bin" ]]; then
    export PATH="$PATH:/usr/local/bin"
fi
## Set alias for xdg-open
alias open="xdg-open"
{{ else if eq .chezmoi.os "darwin" -}}
## Add homebrew bin to path
if command -v brew -v 2>&1 /dev/null; then
  if [[ ":$PATH:" != "*/opt/homebrew/bin" ]]; then
    export PATH="$PATH:/opt/homebrew/bin"
  fi
fi
{{ end }}
## History settings
# Ignore duplicates and leading spaces
HISTCONTROL=ignoreboth
# Number of commands to remember in history
HISTSIZE=1000
# Max size of history file
HISTFILESIZE=2000
# Add timestamps to history (useful for debugging)
HISTTIMEFORMAT="%F %T "
# Append to the history file, don't overwrite it
shopt -s histappend

## Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

## Update window size after each command.
shopt -s checkwinsize

## Generic chroot/container detection
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
elif [ -f /.dockerenv ]; then
    debian_chroot="docker"
elif grep -q container= /proc/1/environ 2>/dev/null; then
    debian_chroot="container"
fi

## Fancy prompt with color support
case "$TERM" in
    xterm-color|*-256color*) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

## If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

## Enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

## Source .bash_aliases if it exists
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

## Enable programmable completion features (you don't need to enable
#  this, if it's already enabled in /etc/bash.bashrc and /etc/profile
#  sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

## Source ~/.local/bin/env if it exists
[ ! -f "$HOME/.local/bin/env" ] || . "$HOME/.local/bin/env"

if [[ -d "$HOME/.nvm" ]]; then
  ## Add nvm to shell
  export NVM_DIR="$HOME/.nvm"
  ## Load nvm
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
  ## This loads nvm bash_completion
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  ## This loads nvm bash_completion
fi

## Source ~/.bashrc.local if it exists
echo ".bashrc.local exists: $([ -f $HOME/.bashrc.local ])"
if [[ -f "${HOME}/.bashrc.local" ]]; then
    echo "Sourcing ~/.bashrc.local"
  . "${HOME}/.bashrc.local"
fi

