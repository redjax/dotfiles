---
name: Create Manual Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type (patch, minor, major)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install chezmoi
        run: sh -c "$(curl -fsLS get.chezmoi.io)" -- -b ~/.local/bin
        shell: bash

      - name: Add chezmoi to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Get current version
        id: version
        run: |
          ## Get the latest git tag, or default to 'v0.0.0'
          CURRENT_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "current_version=${CURRENT_TAG:1}" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=${{ steps.version.outputs.current_version }}
          BUMP_TYPE=${{ github.event.inputs.bump }}
          # Split version into MAJOR, MINOR, PATCH
          IFS="." read -ra VERSION_ARR <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_ARR[0]}
          MINOR=${VERSION_ARR[1]}
          PATCH=${VERSION_ARR[2]}
          case $BUMP_TYPE in
            major) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0 ;;
            minor) MINOR=$((MINOR+1)); PATCH=0 ;;
            patch) PATCH=$((PATCH+1)) ;;
          esac
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

      # - name: Archive dotfiles with date
      #   run: |
      #     DATE=$(date +%Y-%m-%d)
      #     chezmoi archive --format=tar.gz --init --recursive --output=dotfiles-$DATE.tar.gz
      #     chezmoi archive --format=zip --init --recursive --output=dotfiles-$DATE.zip

      - name: Archive dotfiles with date
        run: |
          DATE=$(date +%Y-%m-%d)
          # Initialize chezmoi source state (creates ~/.local/share/chezmoi)
          chezmoi init
          # Apply your dotfiles to generate the source state
          chezmoi apply --source .
          # Create the archives
          chezmoi archive --format=tar.gz --init --recursive --output=dotfiles-$DATE.tar.gz
          chezmoi archive --format=zip --init --recursive --output=dotfiles-$DATE.zip

      ## Create the tag and push it
      - name: Create git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+52949282+github-actions[bot]@users.noreply.github.com"
          git tag "v${{ steps.bump_version.outputs.new_version }}"
          git push origin "v${{ steps.bump_version.outputs.new_version }}"

      ## Create the GitHub release with the new tag, auto-generated release notes, and assets
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          name: "v${{ steps.bump_version.outputs.new_version }}"
          generate_release_notes: true
          files: |
            dotfiles-$DATE.tar.gz
            dotfiles-$DATE.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
